package io.github.joshmcrose.theme

import androidx.compose.foundation.text.selection.TextSelectionColors
import androidx.compose.runtime.Immutable
import androidx.compose.runtime.staticCompositionLocalOf
import androidx.compose.ui.graphics.Color

@Immutable
data class ColorSchemes(
    val lightTheme: ThemeColors = DefaultLightThemeColors,
    val darkTheme: ThemeColors? = DefaultDarkThemeColors
)

internal val LocalColorScheme = staticCompositionLocalOf { DefaultLightThemeColors }

fun lightColors(
    appBackground: Color = DefaultLightThemeColors.appBackground,
    appBorder: Color = DefaultLightThemeColors.appBorder,
    titlebarBackground: Color = DefaultLightThemeColors.titlebarBackground,
    macCloseIconColor: Color = DefaultLightThemeColors.macCloseIconColor,
    macMinimizeIconColor: Color = DefaultLightThemeColors.macMinimizeIconColor,
    macMaximizeIconColor: Color = DefaultLightThemeColors.macMaximizeIconColor,
    macDisabledToolbarIconColor: Color = DefaultLightThemeColors.macDisabledToolbarIconColor,
    windowsToolbarIconColor: Color = DefaultLightThemeColors.windowsToolbarIconColor,
    textSelectionColors: TextSelectionColors? = DefaultLightThemeColors.textSelectionColors,
    primary: Color = DefaultLightThemeColors.primary,
    onPrimary: Color = DefaultLightThemeColors.onPrimary,
    primaryContainer: Color = DefaultLightThemeColors.primaryContainer,
    onPrimaryContainer: Color = DefaultLightThemeColors.onPrimaryContainer,
    secondary: Color = DefaultLightThemeColors.secondary,
    onSecondary: Color = DefaultLightThemeColors.onSecondary,
    secondaryContainer: Color = DefaultLightThemeColors.secondaryContainer,
    onSecondaryContainer: Color = DefaultLightThemeColors.onSecondaryContainer,
    tertiary: Color = DefaultLightThemeColors.tertiary,
    onTertiary: Color = DefaultLightThemeColors.onTertiary,
    tertiaryContainer: Color = DefaultLightThemeColors.tertiaryContainer,
    onTertiaryContainer: Color = DefaultLightThemeColors.onTertiaryContainer,
    error: Color = DefaultLightThemeColors.error,
    onError: Color = DefaultLightThemeColors.onError,
    errorContainer: Color = DefaultLightThemeColors.errorContainer,
    onErrorContainer: Color = DefaultLightThemeColors.onErrorContainer,
    background: Color = DefaultLightThemeColors.background,
    onBackground: Color = DefaultLightThemeColors.onBackground,
    surface: Color = DefaultLightThemeColors.surface,
    onSurface: Color = DefaultLightThemeColors.onSurface,
    surfaceVariant: Color = DefaultLightThemeColors.surfaceVariant,
    onSurfaceVariant: Color = DefaultLightThemeColors.onSurfaceVariant,
    outline: Color = DefaultLightThemeColors.outline,
    outlineVariant: Color = DefaultLightThemeColors.outlineVariant,
    scrim: Color = DefaultLightThemeColors.scrim,
    inverseSurface: Color = DefaultLightThemeColors.inverseSurface,
    inverseOnSurface: Color = DefaultLightThemeColors.inverseOnSurface,
    inversePrimary: Color = DefaultLightThemeColors.inversePrimary,
    surfaceDim: Color = DefaultLightThemeColors.surfaceDim,
    surfaceBright: Color = DefaultLightThemeColors.surfaceBright,
    surfaceContainerLowest: Color = DefaultLightThemeColors.surfaceContainerLowest,
    surfaceContainerLow: Color = DefaultLightThemeColors.surfaceContainerLow,
    surfaceContainer: Color = DefaultLightThemeColors.surfaceContainer,
    surfaceContainerHigh: Color = DefaultLightThemeColors.surfaceContainerHigh,
    surfaceContainerHighest: Color = DefaultLightThemeColors.surfaceContainerHighest,
    themeColors: Map<String, Color>? = null
) = ThemeColors(
    appBackground = appBackground,
    appBorder = appBorder,
    titlebarBackground = titlebarBackground,
    macCloseIconColor = macCloseIconColor,
    macMinimizeIconColor = macMinimizeIconColor,
    macMaximizeIconColor = macMaximizeIconColor,
    macDisabledToolbarIconColor = macDisabledToolbarIconColor,
    windowsToolbarIconColor = windowsToolbarIconColor,
    textSelectionColors = textSelectionColors,
    primary = primary,
    onPrimary = onPrimary,
    primaryContainer = primaryContainer,
    onPrimaryContainer = onPrimaryContainer,
    secondary = secondary,
    onSecondary = onSecondary,
    secondaryContainer = secondaryContainer,
    onSecondaryContainer = onSecondaryContainer,
    tertiary = tertiary,
    onTertiary = onTertiary,
    tertiaryContainer = tertiaryContainer,
    onTertiaryContainer = onTertiaryContainer,
    error = error,
    onError = onError,
    errorContainer = errorContainer,
    onErrorContainer = onErrorContainer,
    background = background,
    onBackground = onBackground,
    surface = surface,
    onSurface = onSurface,
    surfaceVariant = surfaceVariant,
    onSurfaceVariant = onSurfaceVariant,
    outline = outline,
    outlineVariant = outlineVariant,
    scrim = scrim,
    inverseSurface = inverseSurface,
    inverseOnSurface = inverseOnSurface,
    inversePrimary = inversePrimary,
    surfaceDim = surfaceDim,
    surfaceBright = surfaceBright,
    surfaceContainerLowest = surfaceContainerLowest,
    surfaceContainerLow = surfaceContainerLow,
    surfaceContainer = surfaceContainer,
    surfaceContainerHigh = surfaceContainerHigh,
    surfaceContainerHighest = surfaceContainerHighest,
    themeColors = themeColors
)

fun darkColors(
    appBackground: Color = DefaultDarkThemeColors.appBackground,
    appBorder: Color = DefaultDarkThemeColors.appBorder,
    titlebarBackground: Color = DefaultDarkThemeColors.titlebarBackground,
    macCloseIconColor: Color = DefaultDarkThemeColors.macCloseIconColor,
    macMinimizeIconColor: Color = DefaultDarkThemeColors.macMinimizeIconColor,
    macMaximizeIconColor: Color = DefaultDarkThemeColors.macMaximizeIconColor,
    macDisabledToolbarIconColor: Color = DefaultDarkThemeColors.macDisabledToolbarIconColor,
    windowsToolbarIconColor: Color = DefaultDarkThemeColors.windowsToolbarIconColor,
    textSelectionColors: TextSelectionColors? = DefaultDarkThemeColors.textSelectionColors,
    primary: Color = DefaultDarkThemeColors.primary,
    onPrimary: Color = DefaultDarkThemeColors.onPrimary,
    primaryContainer: Color = DefaultDarkThemeColors.primaryContainer,
    onPrimaryContainer: Color = DefaultDarkThemeColors.onPrimaryContainer,
    secondary: Color = DefaultDarkThemeColors.secondary,
    onSecondary: Color = DefaultDarkThemeColors.onSecondary,
    secondaryContainer: Color = DefaultDarkThemeColors.secondaryContainer,
    onSecondaryContainer: Color = DefaultDarkThemeColors.onSecondaryContainer,
    tertiary: Color = DefaultDarkThemeColors.tertiary,
    onTertiary: Color = DefaultDarkThemeColors.onTertiary,
    tertiaryContainer: Color = DefaultDarkThemeColors.tertiaryContainer,
    onTertiaryContainer: Color = DefaultDarkThemeColors.onTertiaryContainer,
    error: Color = DefaultDarkThemeColors.error,
    onError: Color = DefaultDarkThemeColors.onError,
    errorContainer: Color = DefaultDarkThemeColors.errorContainer,
    onErrorContainer: Color = DefaultDarkThemeColors.onErrorContainer,
    background: Color = DefaultDarkThemeColors.background,
    onBackground: Color = DefaultDarkThemeColors.onBackground,
    surface: Color = DefaultDarkThemeColors.surface,
    onSurface: Color = DefaultDarkThemeColors.onSurface,
    surfaceVariant: Color = DefaultDarkThemeColors.surfaceVariant,
    onSurfaceVariant: Color = DefaultDarkThemeColors.onSurfaceVariant,
    outline: Color = DefaultDarkThemeColors.outline,
    outlineVariant: Color = DefaultDarkThemeColors.outlineVariant,
    scrim: Color = DefaultDarkThemeColors.scrim,
    inverseSurface: Color = DefaultDarkThemeColors.inverseSurface,
    inverseOnSurface: Color = DefaultDarkThemeColors.inverseOnSurface,
    inversePrimary: Color = DefaultDarkThemeColors.inversePrimary,
    surfaceDim: Color = DefaultDarkThemeColors.surfaceDim,
    surfaceBright: Color = DefaultDarkThemeColors.surfaceBright,
    surfaceContainerLowest: Color = DefaultDarkThemeColors.surfaceContainerLowest,
    surfaceContainerLow: Color = DefaultDarkThemeColors.surfaceContainerLow,
    surfaceContainer: Color = DefaultDarkThemeColors.surfaceContainer,
    surfaceContainerHigh: Color = DefaultDarkThemeColors.surfaceContainerHigh,
    surfaceContainerHighest: Color = DefaultDarkThemeColors.surfaceContainerHighest,
    themeColors: Map<String, Color>? = null
) = ThemeColors(
    appBackground = appBackground,
    appBorder = appBorder,
    titlebarBackground = titlebarBackground,
    macCloseIconColor = macCloseIconColor,
    macMinimizeIconColor = macMinimizeIconColor,
    macMaximizeIconColor = macMaximizeIconColor,
    macDisabledToolbarIconColor = macDisabledToolbarIconColor,
    windowsToolbarIconColor = windowsToolbarIconColor,
    textSelectionColors = textSelectionColors,
    primary = primary,
    onPrimary = onPrimary,
    primaryContainer = primaryContainer,
    onPrimaryContainer = onPrimaryContainer,
    secondary = secondary,
    onSecondary = onSecondary,
    secondaryContainer = secondaryContainer,
    onSecondaryContainer = onSecondaryContainer,
    tertiary = tertiary,
    onTertiary = onTertiary,
    tertiaryContainer = tertiaryContainer,
    onTertiaryContainer = onTertiaryContainer,
    error = error,
    onError = onError,
    errorContainer = errorContainer,
    onErrorContainer = onErrorContainer,
    background = background,
    onBackground = onBackground,
    surface = surface,
    onSurface = onSurface,
    surfaceVariant = surfaceVariant,
    onSurfaceVariant = onSurfaceVariant,
    outline = outline,
    outlineVariant = outlineVariant,
    scrim = scrim,
    inverseSurface = inverseSurface,
    inverseOnSurface = inverseOnSurface,
    inversePrimary = inversePrimary,
    surfaceDim = surfaceDim,
    surfaceBright = surfaceBright,
    surfaceContainerLowest = surfaceContainerLowest,
    surfaceContainerLow = surfaceContainerLow,
    surfaceContainer = surfaceContainer,
    surfaceContainerHigh = surfaceContainerHigh,
    surfaceContainerHighest = surfaceContainerHighest,
    themeColors = themeColors
)

val DefaultLightThemeColors: ThemeColors = ThemeColors(
    appBackground = Color(0xFFEFEEE2),
    appBorder = Color(0xFFC7C8B8),
    macCloseIconColor = Color(red = 255, green = 59, blue = 48),
    macMinimizeIconColor = Color(red = 255, green = 204, blue = 0),
    macMaximizeIconColor = Color(red = 52, green = 199, blue = 89),
    macDisabledToolbarIconColor = Color.DarkGray,
    windowsToolbarIconColor = Color(0xFF3E4C0C),
    primary = Color(0xFF556523),
    onPrimary = Color(0xFFFFFFFF),
    primaryContainer = Color(0xFFD8EB9A),
    onPrimaryContainer = Color(0xFF3E4C0C),
    secondary = Color(0xFF5B6146),
    onSecondary = Color(0xFFFFFFFF),
    secondaryContainer = Color(0xFFE0E6C4),
    onSecondaryContainer = Color(0xFF434930),
    tertiary = Color(0xFF3A665E),
    onTertiary = Color(0xFFFFFFFF),
    tertiaryContainer = Color(0xFFBCECE2),
    onTertiaryContainer = Color(0xFF204E47),
    error = Color(0xFFBA1A1A),
    onError = Color(0xFFFFFFFF),
    errorContainer = Color(0xFFFFDAD6),
    onErrorContainer = Color(0xFF93000A),
    background = Color(0xFFFBFAED),
    onBackground = Color(0xFF1B1C15),
    surface = Color(0xFFFBFAED),
    onSurface = Color(0xFF1B1C15),
    surfaceVariant = Color(0xFFE3E4D3),
    onSurfaceVariant = Color(0xFF46483C),
    outline = Color(0xFF76786B),
    outlineVariant = Color(0xFFC7C8B8),
    scrim = Color(0xFF000000),
    inverseSurface = Color(0xFF303129),
    inverseOnSurface = Color(0xFFF2F1E5),
    inversePrimary = Color(0xFFBCCF81),
    surfaceDim = Color(0xFFDBDBCF),
    surfaceBright = Color(0xFFFBFAED),
    surfaceContainerLowest = Color(0xFFFFFFFF),
    surfaceContainerLow = Color(0xFFF5F4E8),
    surfaceContainer = Color(0xFFEFEEE2),
    surfaceContainerHigh = Color(0xFFE9E9DD),
    surfaceContainerHighest = Color(0xFFE4E3D7)
)

val DefaultDarkThemeColors: ThemeColors = ThemeColors(
    appBackground = Color(0xFF1F2019),
    appBorder = Color(0xFF46483C),
    macCloseIconColor = Color(red = 255, green = 69, blue = 58),
    macMinimizeIconColor = Color(red = 255, green = 212, blue = 38),
    macMaximizeIconColor = Color(red = 48, green = 240, blue = 88),
    macDisabledToolbarIconColor = Color.LightGray,
    windowsToolbarIconColor = Color(0xFFD8EB9A),
    primary = Color(0xFFBCCF81),
    onPrimary = Color(0xFF293500),
    primaryContainer = Color(0xFF3E4C0C),
    onPrimaryContainer = Color(0xFFD8EB9A),
    secondary = Color(0xFFC4CAA9),
    onSecondary = Color(0xFF2D331C),
    secondaryContainer = Color(0xFF434930),
    onSecondaryContainer = Color(0xFFE0E6C4),
    tertiary = Color(0xFFA1D0C6),
    onTertiary = Color(0xFF033730),
    tertiaryContainer = Color(0xFF204E47),
    onTertiaryContainer = Color(0xFFBCECE2),
    error = Color(0xFFFFB4AB),
    onError = Color(0xFF690005),
    errorContainer = Color(0xFF93000A),
    onErrorContainer = Color(0xFFFFDAD6),
    background = Color(0xFF13140D),
    onBackground = Color(0xFFE4E3D7),
    surface = Color(0xFF13140D),
    onSurface = Color(0xFFE4E3D7),
    surfaceVariant = Color(0xFF46483C),
    onSurfaceVariant = Color(0xFFC7C8B8),
    outline = Color(0xFF909284),
    outlineVariant = Color(0xFF46483C),
    scrim = Color(0xFF000000),
    inverseSurface = Color(0xFFE4E3D7),
    inverseOnSurface = Color(0xFF303129),
    inversePrimary = Color(0xFF556523),
    surfaceDim = Color(0xFF13140D),
    surfaceBright = Color(0xFF393A32),
    surfaceContainerLowest = Color(0xFF0D0F08),
    surfaceContainerLow = Color(0xFF1B1C15),
    surfaceContainer = Color(0xFF1F2019),
    surfaceContainerHigh = Color(0xFF292B23),
    surfaceContainerHighest = Color(0xFF34352D)
)

@Immutable
data class ThemeColors(
    val appBackground: Color,
    val appBorder: Color = appBackground,
    val titlebarBackground: Color = appBackground,

    val macCloseIconColor: Color = DefaultLightThemeColors.macCloseIconColor,
    val macMinimizeIconColor: Color = DefaultLightThemeColors.macMinimizeIconColor,
    val macMaximizeIconColor: Color = DefaultLightThemeColors.macMaximizeIconColor,
    val macDisabledToolbarIconColor: Color = DefaultLightThemeColors.macDisabledToolbarIconColor,

    val windowsToolbarIconColor: Color = DefaultLightThemeColors.windowsToolbarIconColor,

    val textSelectionColors: TextSelectionColors? = null,

    val primary: Color = Color.Unspecified,
    val onPrimary: Color = Color.Unspecified,
    val primaryContainer: Color = Color.Unspecified,
    val onPrimaryContainer: Color = Color.Unspecified,
    val secondary: Color = Color.Unspecified,
    val onSecondary: Color = Color.Unspecified,
    val secondaryContainer: Color = Color.Unspecified,
    val onSecondaryContainer: Color = Color.Unspecified,
    val tertiary: Color = Color.Unspecified,
    val onTertiary: Color = Color.Unspecified,
    val tertiaryContainer: Color = Color.Unspecified,
    val onTertiaryContainer: Color = Color.Unspecified,
    val error: Color = Color.Unspecified,
    val onError: Color = Color.Unspecified,
    val errorContainer: Color = Color.Unspecified,
    val onErrorContainer: Color = Color.Unspecified,
    val background: Color = Color.Unspecified,
    val onBackground: Color = Color.Unspecified,
    val surface: Color = Color.Unspecified,
    val onSurface: Color = Color.Unspecified,
    val surfaceVariant: Color = Color.Unspecified,
    val onSurfaceVariant: Color = Color.Unspecified,
    val outline: Color = Color.Unspecified,
    val outlineVariant: Color = Color.Unspecified,
    val scrim: Color = Color.Unspecified,
    val inverseSurface: Color = Color.Unspecified,
    val inverseOnSurface: Color = Color.Unspecified,
    val inversePrimary: Color = Color.Unspecified,
    val surfaceDim: Color = Color.Unspecified,
    val surfaceBright: Color = Color.Unspecified,
    val surfaceContainerLowest: Color = Color.Unspecified,
    val surfaceContainerLow: Color = Color.Unspecified,
    val surfaceContainer: Color = Color.Unspecified,
    val surfaceContainerHigh: Color = Color.Unspecified,
    val surfaceContainerHighest: Color = Color.Unspecified,

    val themeColors: Map<String, Color>? = null
)